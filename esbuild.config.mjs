import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copyFileSync, mkdirSync, existsSync } from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: prod ? "obsidian-tag-renamer/main.js" : "main.js",
	minify: prod,
});

if (prod) {
	await context.rebuild();
	
	// Create production folder if it doesn't exist
	if (!existsSync("obsidian-tag-renamer")) {
		mkdirSync("obsidian-tag-renamer");
	}
	
	// Copy required files to production folder
	copyFileSync("manifest.json", "obsidian-tag-renamer/manifest.json");
	copyFileSync("versions.json", "obsidian-tag-renamer/versions.json");
	
	console.log("âœ… Production build complete in obsidian-tag-renamer/ folder");
	process.exit(0);
} else {
	await context.watch();
}
